version: 2.1


commands:
  # Rollback_Exercise
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create_infrastructure:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
  configure_infrastructure:
      docker:
        - image: python:3.9.15-alpine3.16
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["63:44:9a:2a:55:ea:b2:63:cc:cf:4a:2e:e9:ca:02:17"]
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
              ansible-playbook -i inventory main-remote.yml
  smoke_test:
      docker:
        # - image: alpine:latest
        - image: amazon/aws-cli
      steps:
        # - run: apk add --update curl
        - run: yum update curl
        - run:
            name: smoke test
            command: |
              URL="https://blogggg.udacity.com/"
              if curl -s --head ${URL}
              then
                return 0
              else
                return 1
              fi
        - destroy_environment
  # Executes the bucket.yml - Deploy an S3 bucket, and interface with that bucket to synchronize the files between local and the bucket.
  # Note that the `--parameter-overrides` let you specify a value that override parameter value in the bucket.yml template file.
  create_and_deploy_front_end:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Execute bucket.yml - Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
              --template-file bucket.yml \
              --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:5} \
              --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:5}"
        # Uncomment the step below if yoou wish to upload all contents of the current directory(index.html) to the S3 bucket
        - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:5} --delete
  # Executes the cloudfront.yml template that will modify the existing CloudFront Distribution, change its target from the old bucket to the new bucket - `mybucket-${CIRCLE_WORKFLOW_ID:0:7}`. 
  # Notice here we use the stack name `production-distro` which is the same name we used while deploying to the S3 bucket manually.
  promote_to_production:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Execute cloudfront.yml
            command: |
              aws cloudformation deploy \
              --template-file cloudfront.yml \
              --stack-name production-distro \
              --parameter-overrides PipelineID="mybucket-${CIRCLE_WORKFLOW_ID:0:5}"

workflows:
  my_workflow:
      jobs:
        #- create_infrastructure
        #- configure_infrastructure
            # requires:
            #   - create_infrastructure
        #- smoke_test:
        #    requires:
        #      - create_infrastructure
              # - configure_infrastructure
        - create_and_deploy_front_end
        - promote_to_production:
            requires: [create_and_deploy_front_end]